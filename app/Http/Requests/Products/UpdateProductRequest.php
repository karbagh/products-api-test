<?php

namespace App\Http\Requests\Products;

use Illuminate\Foundation\Http\FormRequest;

final class UpdateProductRequest extends FormRequest
{
    /**
     * @OA\Schema(
     *  title="Update Request",
     *  description="Update Request request",
     *  schema="UpdateProductRequestSchema",
     *  @OA\Property(
     *      property="name.hy",
     *      type="string",
     *      example="Name in Armenian",
     *      title="Name in Armenian."
     *  ),
     *  @OA\Property(
     *      property="name.ru",
     *      type="string",
     *      example="Name in Russian",
     *      title="Name in Russian."
     *  ),
     *  @OA\Property(
     *      property="name.ena",
     *      type="string",
     *      example="Name in English",
     *      title="Name in English."
     *  ),
     *  @OA\Property(
     *      property="description.hy",
     *      type="string",
     *      example="Desciption in Armenian",
     *      title="Desciption in Armenian."
     *  ),
     *  @OA\Property(
     *      property="description.ru",
     *      type="string",
     *      example="Desciption in Russian",
     *      title="Desciption in Russian."
     *  ),
     *  @OA\Property(
     *      property="description.ena",
     *      type="string",
     *      example="Desciption in English",
     *      title="Desciption in English."
     *  ),
     *  @OA\Property(
     *      property="price",
     *      type="number",
     *      example="1000"
     *  ),
     * )
     *
     * Get the validation rules that apply to the request.
     *
     * @return array<string, mixed>
     */
    public function rules(): array
    {
        return [
            'name' => [
                'sometimes',
                'array',
            ],
            'name.hy' => [
                'sometimes',
                'string',
            ],
            'name.ru' => [
                'sometimes',
                'string',
            ],
            'name.en' => [
                'sometimes',
                'string',
            ],
            'description' => [
                'sometimes',
                'array',
            ],
            'description.hy' => [
                'sometimes',
                'string',
            ],
            'description.ru' => [
                'sometimes',
                'string',
            ],
            'description.en' => [
                'sometimes',
                'string',
            ],
            'price' => [
                'sometimes',
                'numeric',
            ],
        ];
    }

    /**
     * @OA\Schema(
     *  title="Update Product",
     *  description="Update Product validation messages",
     *  schema="UpdateProductRequestMessagesSchema",
     *  @OA\Property(
     *      property="name.hy",
     *      type="string",
     *      example={"The id field is required.", "The selected id is invalid."},
     *  ),
     *  @OA\Property(
     *      property="name.ru",
     *      type="string",
     *      example={"The id field is required.", "The selected id is invalid."},
     *  ),
     *  @OA\Property(
     *      property="name.en",
     *      type="string",
     *      example={"The id field is required.", "The selected id is invalid."},
     *  ),
     *  @OA\Property(
     *      property="description.hy",
     *      type="string",
     *      example={"The id field is required.", "The selected id is invalid."},
     *  ),
     *  @OA\Property(
     *      property="description.ru",
     *      type="string",
     *      example={"The id field is required.", "The selected id is invalid."},
     *  ),
     *  @OA\Property(
     *      property="description.en",
     *      type="string",
     *      example={"The id field is required.", "The selected id is invalid."},
     *  ),
     *  @OA\Property(
     *      property="price",
     *      type="string",
     *      example={"The count field is required.", "The count should be a numeric."}
     *  )
     * )
     *
     * Get the validation messages that apply to the request.
     *
     * @return array
     */
    public function messages(): array
    {
        return parent::messages(); // TODO: Change the autogenerated stub
    }
}
